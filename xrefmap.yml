### YamlMime:XRefMap
sorted: true
references:
- uid: CG.Linq.EFCore.Repositories
  name: CG.Linq.EFCore.Repositories
  href: api/CG.Linq.EFCore.Repositories.html
  commentId: N:CG.Linq.EFCore.Repositories
  fullName: CG.Linq.EFCore.Repositories
  nameWithType: CG.Linq.EFCore.Repositories
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4
  name: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html
  commentId: T:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4
  name.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.#ctor(`1,`0)
  name: EFCoreCrudRepositoryBase(TOptions, TContext)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4__ctor__1__0_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.#ctor(`1,`0)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.EFCoreCrudRepositoryBase(TOptions, TContext)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).EFCoreCrudRepositoryBase(TOptions, TContext)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.EFCoreCrudRepositoryBase(TOptions, TContext)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).EFCoreCrudRepositoryBase(TOptions, TContext)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.#ctor*
  name: EFCoreCrudRepositoryBase
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4__ctor_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.#ctor
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.EFCoreCrudRepositoryBase
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).EFCoreCrudRepositoryBase
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.EFCoreCrudRepositoryBase
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).EFCoreCrudRepositoryBase
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AddAsync(`2,System.Threading.CancellationToken)
  name: AddAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_AddAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AddAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AddAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AddAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AddAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AddAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AddAsync*
  name: AddAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_AddAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AddAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AddAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AddAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AddAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AddAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_AsQueryable
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AsQueryable
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AsQueryable()
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AsQueryable()
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AsQueryable()
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AsQueryable()
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_AsQueryable_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AsQueryable
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AsQueryable
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.AsQueryable
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).AsQueryable
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DataContext
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_DataContext
  commentId: P:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DataContext
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DataContext
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DataContext
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DataContext*
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_DataContext_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DataContext
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DataContext
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DataContext
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DeleteAsync(`2,System.Threading.CancellationToken)
  name: DeleteAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_DeleteAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DeleteAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DeleteAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DeleteAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DeleteAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DeleteAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DeleteAsync*
  name: DeleteAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_DeleteAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.DeleteAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DeleteAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DeleteAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.DeleteAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).DeleteAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_Dispose_System_Boolean_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.Dispose(System.Boolean)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).Dispose(System.Boolean)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.Dispose(Boolean)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).Dispose(Boolean)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.Dispose*
  name: Dispose
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_Dispose_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.Dispose
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.Dispose
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).Dispose
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.Dispose
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).Dispose
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.UpdateAsync(`2,System.Threading.CancellationToken)
  name: UpdateAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_UpdateAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.UpdateAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.UpdateAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).UpdateAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.UpdateAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).UpdateAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.UpdateAsync*
  name: UpdateAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-4.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_4_UpdateAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`4.UpdateAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.UpdateAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).UpdateAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey>.UpdateAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey).UpdateAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5
  name: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html
  commentId: T:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5
  name.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.#ctor(`1,`0)
  name: EFCoreCrudRepositoryBase(TOptions, TContext)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5__ctor__1__0_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.#ctor(`1,`0)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.EFCoreCrudRepositoryBase(TOptions, TContext)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).EFCoreCrudRepositoryBase(TOptions, TContext)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.EFCoreCrudRepositoryBase(TOptions, TContext)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).EFCoreCrudRepositoryBase(TOptions, TContext)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.#ctor*
  name: EFCoreCrudRepositoryBase
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5__ctor_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.#ctor
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.EFCoreCrudRepositoryBase
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).EFCoreCrudRepositoryBase
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.EFCoreCrudRepositoryBase
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).EFCoreCrudRepositoryBase
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AddAsync(`2,System.Threading.CancellationToken)
  name: AddAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_AddAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AddAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AddAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AddAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AddAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AddAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AddAsync*
  name: AddAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_AddAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AddAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AddAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AddAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AddAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AddAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_AsQueryable
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AsQueryable
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AsQueryable()
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AsQueryable()
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AsQueryable()
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AsQueryable()
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_AsQueryable_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AsQueryable
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AsQueryable
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.AsQueryable
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).AsQueryable
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DataContext
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_DataContext
  commentId: P:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DataContext
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DataContext
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DataContext
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DataContext*
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_DataContext_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DataContext
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DataContext
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DataContext
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DeleteAsync(`2,System.Threading.CancellationToken)
  name: DeleteAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_DeleteAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DeleteAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DeleteAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DeleteAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DeleteAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DeleteAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DeleteAsync*
  name: DeleteAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_DeleteAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.DeleteAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DeleteAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DeleteAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.DeleteAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).DeleteAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_Dispose_System_Boolean_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.Dispose(System.Boolean)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).Dispose(System.Boolean)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.Dispose(Boolean)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).Dispose(Boolean)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.Dispose*
  name: Dispose
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_Dispose_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.Dispose
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.Dispose
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).Dispose
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.Dispose
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).Dispose
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.UpdateAsync(`2,System.Threading.CancellationToken)
  name: UpdateAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_UpdateAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.UpdateAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.UpdateAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).UpdateAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.UpdateAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).UpdateAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.UpdateAsync*
  name: UpdateAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-5.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_5_UpdateAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`5.UpdateAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.UpdateAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).UpdateAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2>.UpdateAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2).UpdateAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6
  name: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html
  commentId: T:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6
  name.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.#ctor(`1,`0)
  name: EFCoreCrudRepositoryBase(TOptions, TContext)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6__ctor__1__0_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.#ctor(`1,`0)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.EFCoreCrudRepositoryBase(TOptions, TContext)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).EFCoreCrudRepositoryBase(TOptions, TContext)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.EFCoreCrudRepositoryBase(TOptions, TContext)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).EFCoreCrudRepositoryBase(TOptions, TContext)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.#ctor*
  name: EFCoreCrudRepositoryBase
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6__ctor_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.#ctor
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.EFCoreCrudRepositoryBase
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).EFCoreCrudRepositoryBase
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.EFCoreCrudRepositoryBase
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).EFCoreCrudRepositoryBase
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AddAsync(`2,System.Threading.CancellationToken)
  name: AddAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_AddAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AddAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AddAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AddAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AddAsync*
  name: AddAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_AddAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AddAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AddAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AddAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AddAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_AsQueryable
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AsQueryable
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable()
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable()
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable()
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable()
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_AsQueryable_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.AsQueryable
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).AsQueryable
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DataContext
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_DataContext
  commentId: P:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DataContext
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DataContext
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DataContext
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DataContext*
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_DataContext_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DataContext
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DataContext
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DataContext
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DeleteAsync(`2,System.Threading.CancellationToken)
  name: DeleteAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_DeleteAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DeleteAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DeleteAsync*
  name: DeleteAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_DeleteAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.DeleteAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.DeleteAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).DeleteAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_Dispose_System_Boolean_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.Dispose(System.Boolean)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).Dispose(System.Boolean)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.Dispose(Boolean)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).Dispose(Boolean)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.Dispose*
  name: Dispose
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_Dispose_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.Dispose
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.Dispose
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).Dispose
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.Dispose
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).Dispose
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.UpdateAsync(`2,System.Threading.CancellationToken)
  name: UpdateAsync(TModel, CancellationToken)
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_UpdateAsync__2_System_Threading_CancellationToken_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.UpdateAsync(`2,System.Threading.CancellationToken)
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync(TModel, System.Threading.CancellationToken)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync(TModel, System.Threading.CancellationToken)
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync(TModel, CancellationToken)
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync(TModel, CancellationToken)
- uid: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.UpdateAsync*
  name: UpdateAsync
  href: api/CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase-6.html#CG_Linq_EFCore_Repositories_EFCoreCrudRepositoryBase_6_UpdateAsync_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase`6.UpdateAsync
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync
  nameWithType: EFCoreCrudRepositoryBase<TContext, TOptions, TModel, TKey1, TKey2, TKey3>.UpdateAsync
  nameWithType.vb: EFCoreCrudRepositoryBase(Of TContext, TOptions, TModel, TKey1, TKey2, TKey3).UpdateAsync
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2
  name: EFCoreRepositoryBase<TContext, TOptions>
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-2.html
  commentId: T:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2
  name.vb: EFCoreRepositoryBase(Of TContext, TOptions)
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions>
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions)
  nameWithType: EFCoreRepositoryBase<TContext, TOptions>
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions)
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.#ctor(`1,`0)
  name: EFCoreRepositoryBase(TOptions, TContext)
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-2.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_2__ctor__1__0_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.#ctor(`1,`0)
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions>.EFCoreRepositoryBase(TOptions, TContext)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions).EFCoreRepositoryBase(TOptions, TContext)
  nameWithType: EFCoreRepositoryBase<TContext, TOptions>.EFCoreRepositoryBase(TOptions, TContext)
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions).EFCoreRepositoryBase(TOptions, TContext)
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.#ctor*
  name: EFCoreRepositoryBase
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-2.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_2__ctor_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.#ctor
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions>.EFCoreRepositoryBase
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions).EFCoreRepositoryBase
  nameWithType: EFCoreRepositoryBase<TContext, TOptions>.EFCoreRepositoryBase
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions).EFCoreRepositoryBase
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.DataContext
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-2.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_2_DataContext
  commentId: P:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.DataContext
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions).DataContext
  nameWithType: EFCoreRepositoryBase<TContext, TOptions>.DataContext
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.DataContext*
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-2.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_2_DataContext_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.DataContext
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions).DataContext
  nameWithType: EFCoreRepositoryBase<TContext, TOptions>.DataContext
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-2.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_2_Dispose_System_Boolean_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.Dispose(System.Boolean)
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions).Dispose(System.Boolean)
  nameWithType: EFCoreRepositoryBase<TContext, TOptions>.Dispose(Boolean)
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions).Dispose(Boolean)
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.Dispose*
  name: Dispose
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-2.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_2_Dispose_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`2.Dispose
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions>.Dispose
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions).Dispose
  nameWithType: EFCoreRepositoryBase<TContext, TOptions>.Dispose
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions).Dispose
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3
  name: EFCoreRepositoryBase<TContext, TOptions, TModel>
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html
  commentId: T:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3
  name.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel)
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel)
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel)
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.#ctor(`1,`0)
  name: EFCoreRepositoryBase(TOptions, TContext)
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3__ctor__1__0_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.#ctor(`1,`0)
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.EFCoreRepositoryBase(TOptions, TContext)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).EFCoreRepositoryBase(TOptions, TContext)
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.EFCoreRepositoryBase(TOptions, TContext)
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).EFCoreRepositoryBase(TOptions, TContext)
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.#ctor*
  name: EFCoreRepositoryBase
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3__ctor_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.#ctor
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.EFCoreRepositoryBase
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).EFCoreRepositoryBase
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.EFCoreRepositoryBase
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).EFCoreRepositoryBase
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.AsQueryable
  name: AsQueryable()
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3_AsQueryable
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.AsQueryable
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.AsQueryable()
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).AsQueryable()
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.AsQueryable()
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).AsQueryable()
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.AsQueryable*
  name: AsQueryable
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3_AsQueryable_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.AsQueryable
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.AsQueryable
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).AsQueryable
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.AsQueryable
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).AsQueryable
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.DataContext
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3_DataContext
  commentId: P:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.DataContext
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).DataContext
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.DataContext
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.DataContext*
  name: DataContext
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3_DataContext_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.DataContext
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.DataContext
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).DataContext
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.DataContext
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).DataContext
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3_Dispose_System_Boolean_
  commentId: M:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.Dispose(System.Boolean)
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.Dispose(System.Boolean)
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).Dispose(System.Boolean)
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.Dispose(Boolean)
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).Dispose(Boolean)
- uid: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.Dispose*
  name: Dispose
  href: api/CG.Linq.EFCore.Repositories.EFCoreRepositoryBase-3.html#CG_Linq_EFCore_Repositories_EFCoreRepositoryBase_3_Dispose_
  commentId: Overload:CG.Linq.EFCore.Repositories.EFCoreRepositoryBase`3.Dispose
  isSpec: "True"
  fullName: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase<TContext, TOptions, TModel>.Dispose
  fullName.vb: CG.Linq.EFCore.Repositories.EFCoreRepositoryBase(Of TContext, TOptions, TModel).Dispose
  nameWithType: EFCoreRepositoryBase<TContext, TOptions, TModel>.Dispose
  nameWithType.vb: EFCoreRepositoryBase(Of TContext, TOptions, TModel).Dispose
- uid: CG.Linq.EFCore.Repositories.Options
  name: CG.Linq.EFCore.Repositories.Options
  href: api/CG.Linq.EFCore.Repositories.Options.html
  commentId: N:CG.Linq.EFCore.Repositories.Options
  fullName: CG.Linq.EFCore.Repositories.Options
  nameWithType: CG.Linq.EFCore.Repositories.Options
- uid: CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions
  name: EFCoreRepositoryOptions
  href: api/CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions.html
  commentId: T:CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions
  fullName: CG.Linq.EFCore.Repositories.Options.EFCoreRepositoryOptions
  nameWithType: EFCoreRepositoryOptions
